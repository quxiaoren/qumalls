import{_ as s,o as a,c as n,V as l}from"./chunks/framework.4490fb98.js";const p="/icones1.png",o="/icones2.png",m=JSON.parse('{"title":"图标","description":"","frontmatter":{},"headers":[],"relativePath":"guide/svg-icon.md","filePath":"guide/svg-icon.md"}'),e={name:"guide/svg-icon.md"},t=l(`<h1 id="图标" tabindex="-1">图标 <a class="header-anchor" href="#图标" aria-label="Permalink to &quot;图标&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">注意</p><p>由于 Element Plus 官方的 SVG 图标暂时不支持自动导入，整体开发体验并不友好，所以框架并没有采用 Element Plus 官方提供的使用方式。</p><p>如果你需要使用 Element Plus 的图标，可以参考下面 <a href="#iconify-图标">Iconify</a> 或 <a href="#unocss-图标">Unocss</a> 方案。</p></div><p>框架提供了三种使用图标的方式，你可以根据自己的使用需求自行选择。</p><h2 id="自定义图标" tabindex="-1">自定义图标 <a class="header-anchor" href="#自定义图标" aria-label="Permalink to &quot;自定义图标&quot;">​</a></h2><p>你可以去<a href="https://www.iconfont.cn/" target="_blank" rel="noreferrer">阿里巴巴矢量图标库</a>，或者其它支持下载 SVG 图标文件的网站，又或者是设计师绘制的 SVG 文件，将准备好的 SVG 图标文件放到 <code>/src/assets/icons/</code> 目录下，然后在页面中就可以通过 SvgIcon 组件使用了，name 就是 svg 的文件名。</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!-- /src/assets/icons/example.svg --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg-icon</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;example&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- /src/assets/icons/example.svg --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg-icon</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;example&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><h2 id="iconify-图标" tabindex="-1">Iconify 图标 <a class="header-anchor" href="#iconify-图标" aria-label="Permalink to &quot;Iconify 图标&quot;">​</a></h2><p><a href="https://github.com/iconify/iconify" target="_blank" rel="noreferrer">Iconify</a> 提供 100+ 套图标集，有 100,000+ 个图标可以免费使用。</p><p>专业版可以使用任意图标集内的图标，基础版只能使用其中的 Element Plus 图标。</p><h3 id="使用-element-plus-图标" tabindex="-1">使用 Element Plus 图标 <a class="header-anchor" href="#使用-element-plus-图标" aria-label="Permalink to &quot;使用 Element Plus 图标&quot;">​</a></h3><p>使用方式很简单，你只需进入 Iconify 的 <a href="https://icon-sets.iconify.design/ep/" target="_blank" rel="noreferrer">Element Plus 图标</a> 页面，然后点击需要使用的图标，复制图标名称 <code>ep:xxx</code>，最后通过 Iconify 提供的 Icon 组件就可以使用了。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Icon } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@iconify/vue&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#FDAEB7;font-style:italic;">Icon</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">icon</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ep:arrow-right&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Icon } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@iconify/vue&#39;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#B31D28;font-style:italic;">Icon</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">icon</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;ep:arrow-right&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>当然这么使用并没有很方便，依旧还是需要手动导入一个 Icon 组件。如果你也觉得麻烦的话，那么你可以使用 SvgIcon 组件来展示，框架已经帮你做好的所有处理。</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg-icon</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ep:arrow-right&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg-icon</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;ep:arrow-right&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><h3 id="使用其它图标集的图标" tabindex="-1">使用其它图标集的图标 <sup class="pro-badge"></sup> <a class="header-anchor" href="#使用其它图标集的图标" aria-label="Permalink to &quot;使用其它图标集的图标 &lt;sup class=&quot;pro-badge&quot; /&gt;&quot;">​</a></h3><p>你可以在 <a href="https://icon-sets.iconify.design/" target="_blank" rel="noreferrer">Iconify 官网</a> 上查找 Iconify 提供的所有图标，并按照使用 Element Plus 图标的方式去使用。或者你也可以在 <a href="https://icones.js.org/" target="_blank" rel="noreferrer">Icônes 网站</a> 上查找你想要的图标，这是一个基于 Iconify 的在线图标搜索网站，它比 Iconify 官网的操作更直观。</p><p>除此之外我们还推荐你安装 <a href="https://marketplace.visualstudio.com/items?itemName=antfu.iconify" target="_blank" rel="noreferrer">Iconify IntelliSense</a> 这个 VSCode 扩展，方便在 VSCode 里预览图标。</p><p><img src="`+p+'" alt="" data-zoomable=""></p><p><img src="'+o+`" alt="" data-zoomable=""></p><h3 id="调用本地-iconify-图标" tabindex="-1">调用本地 Iconify 图标 <a class="header-anchor" href="#调用本地-iconify-图标" aria-label="Permalink to &quot;调用本地 Iconify 图标&quot;">​</a></h3><p>由于 Iconify 图标默认是在线的服务，即首次调用会触发一个外部网络请求，去获取 svg 原始数据，并缓存在 localStorage 和 sessionStorage 中，这样下次再调用的时候，则直接从缓存中获取并展示。</p><p>但如果你开发的后台应用是部署在内部网络，无法访问互联网，那么就需要使用到本地的 Iconify 图标。</p><p>使用本地 Iconify 图标时，框架会在首次加载时候将所有图标进行注册，类似于全局引入的概念。</p><p>这里基础版和专业版的配置方式不太一样，请自行选择查看。</p><details class="details custom-block"><summary>基础版</summary><p>在应用配置中设置 Iconify 图标的使用方式改为离线使用：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">globalSettings</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Settings</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  app: {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    iconifyOfflineUse: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">globalSettings</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Settings</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line highlighted"><span style="color:#24292E;">  app: {</span></span>
<span class="line highlighted"><span style="color:#24292E;">    iconifyOfflineUse: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></details><details class="details custom-block"><summary>专业版</summary><p>在框架中执行 <code>pnpm run generate:icons</code> 命令后，按照指引选择你需要用到的图标集，并选择使用方式为离线。</p><p>这样再在框架中使用这些图标，就不会触发外部网络请求了。如果使用选择之外的图标，依旧还是会触发外部网络请求。</p></details><h2 id="unocss-图标" tabindex="-1">Unocss 图标 <sup class="pro-badge"></sup> <a class="header-anchor" href="#unocss-图标" aria-label="Permalink to &quot;Unocss 图标 &lt;sup class=&quot;pro-badge&quot; /&gt;&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>这是使用 Iconify 图标的另一种方式，框架也更建议使用这种方案。</p></div><p>上面介绍的 Iconify 图标，在使用时和自定义图标一样，最终都会渲染出 <code>&lt;svg&gt;</code> 元素并插入到页面中，而 <code>&lt;svg&gt;</code> 元素就会对 DOM 造成负担。</p><p>为了更极致的开发体验，框架引入了 Unocss 图标方案，它基于 Iconify 图标，采用了 CSS 去处理图标的展示，框架大部分核心模块里采用的是这种方式。如果你对其中的技术细节感兴趣，可以阅读这篇 Unocss 作者的文章：《<a href="https://antfu.me/posts/icons-in-pure-css-zh" target="_blank" rel="noreferrer">聊聊纯 CSS 图标</a>》。</p><p>框架已经做好了所有配置，使用方式也极为简单，你可以在任意原生 HTML 标签上通过设置 class 的方式使用，格式为 <code>i-{集合名}:{图标名}</code>，例如：</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;i-ep:arrow-right&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">i</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;i-ep:search&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;i-ep:arrow-right&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">i</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;i-ep:search&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>当然你同样也可以通过 SvgIcon 使用它。</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg-icon</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;i-ep:arrow-right&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg-icon</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;i-ep:arrow-right&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>在使用 Unocss 图标时，需要注意以下几点：</p><ul><li><p>图标字符串不支持拆分</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!-- 这样不会生效 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">i</span><span style="color:#E1E4E8;"> :</span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;&#39;i-ep&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;:search&#39;&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- 这样不会生效 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">i</span><span style="color:#24292E;"> :</span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;&#39;i-ep&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;:search&#39;&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div></li><li><p>图标字符串不支持异步返回</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!-- 这样不会生效 --&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- 假设 name 是异步请求返回的数据，name 为 i-ep:search --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">i</span><span style="color:#E1E4E8;"> :</span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- 这样不会生效 --&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- 假设 name 是异步请求返回的数据，name 为 i-ep:search --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">i</span><span style="color:#24292E;"> :</span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">name</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>如果确实有这种需求，你可以使用 SvgIcon 组件并设置 runtime 属性，框架会移除 <code>i-</code> 前缀并按 Iconify 图标进行处理，并渲染成 <code>&lt;svg&gt;</code> 元素。</p><div class="language-template vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!-- 假设 name 是异步请求返回的数据，name 为 i-ep:search --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg-icon</span><span style="color:#E1E4E8;"> :</span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">runtime</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- 等同于 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg-icon</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ep:search&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!-- 假设 name 是异步请求返回的数据，name 为 i-ep:search --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg-icon</span><span style="color:#24292E;"> :</span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">name</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">runtime</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- 等同于 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg-icon</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;ep:search&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div></li><li><p>Unocss 默认不会扫描 <code>.ts</code> 文件，在 <code>.ts</code> 文件里使用需要增加 <code>// @unocss-include</code> 注释</p></li></ul><h2 id="图标选择器" tabindex="-1">图标选择器 <sup class="pro-badge"></sup> <a class="header-anchor" href="#图标选择器" aria-label="Permalink to &quot;图标选择器 &lt;sup class=&quot;pro-badge&quot; /&gt;&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Element Plus 图标集是默认生效的，所以即便执行命令后，不选择任何图标集，框架也会引入 Element Plus 图标集。</p></div><p>图标选择器是一个特殊的组件，它需要展示多套图标集内的所有图标。</p><p>通过执行 <code>pnpm run generate:icons</code> 命令，并按照指引完成操作后，图标选择器就会自动生效了。</p>`,40),c=[t];function r(i,E,y,d,g,u){return a(),n("div",null,c)}const v=s(e,[["render",r]]);export{m as __pageData,v as default};
