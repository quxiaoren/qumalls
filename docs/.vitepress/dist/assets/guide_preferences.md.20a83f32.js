import{_ as s,o as a,c as e,V as n}from"./chunks/framework.4490fb98.js";const l="/preferences.png",u=JSON.parse('{"title":"用户偏好设置","description":"","frontmatter":{},"headers":[],"relativePath":"guide/preferences.md","filePath":"guide/preferences.md"}'),p={name:"guide/preferences.md"},o=n(`<h1 id="用户偏好设置" tabindex="-1">用户偏好设置 <sup class="pro-badge"></sup> <a class="header-anchor" href="#用户偏好设置" aria-label="Permalink to &quot;用户偏好设置 &lt;sup class=&quot;pro-badge&quot; /&gt;&quot;">​</a></h1><p>如果希望将框架的部分应用配置项暴露给用户，让用户可以自行设置，那么可以使用用户偏好设置功能。</p><h2 id="开启" tabindex="-1">开启 <a class="header-anchor" href="#开启" aria-label="Permalink to &quot;开启&quot;">​</a></h2><p>在应用配置中设置：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">globalSettings</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Settings</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  app: {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    enableUserPreferences: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">globalSettings</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Settings</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line highlighted"><span style="color:#24292E;">  app: {</span></span>
<span class="line highlighted"><span style="color:#24292E;">    enableUserPreferences: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line highlighted"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><img src="`+l+`" alt="" data-zoomable=""></p><h2 id="定制偏好设置内容" tabindex="-1">定制偏好设置内容 <a class="header-anchor" href="#定制偏好设置内容" aria-label="Permalink to &quot;定制偏好设置内容&quot;">​</a></h2><p>然后打开 <code>/src/layouts/components/Preferences/index.vue</code> 文件，你可以在文件里进一步定制用户偏好设置里的内容：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">preferences</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Settings</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">&gt;({</span></span>
<span class="line"><span style="color:#E1E4E8;">  app: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    colorScheme: settingsDefault.app.colorScheme,</span></span>
<span class="line"><span style="color:#E1E4E8;">    theme: settingsDefault.app.theme,</span></span>
<span class="line"><span style="color:#E1E4E8;">    enableProgress: settingsDefault.app.enableProgress,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">preferences</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Settings</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;">&gt;({</span></span>
<span class="line"><span style="color:#24292E;">  app: {</span></span>
<span class="line"><span style="color:#24292E;">    colorScheme: settingsDefault.app.colorScheme,</span></span>
<span class="line"><span style="color:#24292E;">    theme: settingsDefault.app.theme,</span></span>
<span class="line"><span style="color:#24292E;">    enableProgress: settingsDefault.app.enableProgress,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>如果仔细对比，会发现这里的配置项并不是框架的完整应用配置，这是因为有部分配置项并不适合暴露给用户，比如 <code>app.enableUserPreferences</code> 这个配置项就是用来控制是否开启用户偏好设置的，如果开启了用户偏好设置，那么这个配置项就不应该再暴露给用户了，否则用户就可以关闭用户偏好设置了，这样就没有意义了。再比如 <code>app.routeBaseOn</code> 这个配置项是用来控制路由数据来源的，修改它会直接影响代码的调整，所以也是不能暴露给用户的。</p><p>所以请勿扩展这里的配置项，你需要做的就是将不需要暴露给用户的配置项删除或注释（ <code>&lt;template&gt;</code> 中的代码无需删除或注释，框架已经做了容错处理）。</p><h2 id="处理请求" tabindex="-1">处理请求 <a class="header-anchor" href="#处理请求" aria-label="Permalink to &quot;处理请求&quot;">​</a></h2><p>当定制好了用户偏好设置内容后，然后到 <code>/src/api/modules/user.ts</code> 中找到 <code>preferences()</code> 和 <code>preferencesEdit()</code> 这两个函数，并分别修改这两个函数的请求地址。</p><div class="tip custom-block"><p class="custom-block-title">建议</p><p>为减轻后端处理，数据会直接以 JSON 字符串进行存储，建议后端可以在用户表增加相关字段，并将字段类型设为 <code>lonetext</code> 。</p></div>`,14),t=[o];function c(r,i,E,d,y,h){return a(),e("div",null,t)}const f=s(p,[["render",c]]);export{u as __pageData,f as default};
